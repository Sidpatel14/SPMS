@model UserProfileViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        /* background: linear-gradient(135deg, #667eea, #764ba2); */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
    }

    .register-container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
       /*  padding: 50px 15px; */
        min-height: calc(100vh - 200px); /* allows room for header/footer */
    }

    .register-card {
        width: 100%;
        max-width: 800px;
        background: #fff;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        padding: 40px;
        transition: all 0.3s ease;
    }

    .register-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 15px 40px rgba(0,0,0,0.25);
    }

    .register-card h2 {
        text-align: center;
        font-weight: 700;
        color: #333;
        margin-bottom: 30px;
    }

    .form-group {
        position: relative;
        margin-bottom: 25px;
    }

    .form-group input,
    .form-group select {
        width: 100%;
        padding: 12px 15px;
        border-radius: 10px;
        border: 1px solid #ccc;
        background: #fefefe;
        transition: all 0.3s ease;
    }

    .form-group input:focus,
    .form-group select:focus {
        border-color: #667eea;
        box-shadow: 0 0 8px rgba(102,126,234,0.3);
        outline: none;
    }

    .form-group label {
        position: absolute;
        top: 12px;
        left: 15px;
        color: #aaa;
        pointer-events: none;
        transition: all 0.2s ease;
        font-size: 14px;
        background: white;
    }

    .form-group input:focus + label,
    .form-group input:not(:placeholder-shown) + label,
    .form-group select:valid + label {
        top: -10px;
        left: 12px;
        font-size: 12px;
        color: #667eea;
        padding: 0 4px;
    }

    .register-card button {
        width: 100%;
        padding: 12px;
        border: none;
        border-radius: 10px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: #fff;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .register-card button:hover {
        background: linear-gradient(135deg, #764ba2, #667eea);
        transform: translateY(-2px);
    }

    .alert {
        padding: 12px 15px;
        border-radius: 10px;
        margin-bottom: 20px;
        font-size: 14px;
    }

    .alert-success {
        background: #d1e7dd;
        color: #0f5132;
        border: 1px solid #badbcc;
    }

    .alert-danger {
        background: #f8d7da;
        color: #842029;
        border: 1px solid #f5c2c7;
    }

    .register-card h3 {
        margin-top: 40px;
        text-align: center;
        color: #333;
    }

    @@media (max-width: 768px) {
        .register-card {
            padding: 25px;
        }
    }
</style>

<div class="register-container">
    <div class="register-card">
        <h2>User Profile</h2>

        @if (ViewBag.Message != null)
        {
            <div class="alert alert-success">@ViewBag.Message</div>
        }
        else if (ViewBag.Error != null)
        {
            <div class="alert alert-danger">@ViewBag.Error</div>
        }

        @using (Html.BeginForm("UpdateProfile", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="UserId" id="UserId" value="@Model.UserId" />
            <input type="hidden" name="CountryId" id="CountryId" value="@Model.CountryId" />
            <input type="hidden" name="StateId" id="StateId" value="@Model.StateId" />
            <div class="row">
                <div class="col-md-2 form-group">
                    <select name="Title" class="form-control" required>
                        <option value="">Title</option>
                        <option value="Mr" selected="@(Model?.Title == "Mr" ? "selected" : null)">Mr</option>
                        <option value="Mrs" selected="@(Model?.Title == "Mrs" ? "selected" : null)">Mrs</option>
                        <option value="Miss" selected="@(Model?.Title == "Miss" ? "selected" : null)">Miss</option>
                    </select>
                    <label>Title</label>
                </div>
                <div class="col-md-5 form-group">
                    <input type="text" name="FirstName" value="@(Model?.FirstName ?? string.Empty)" required placeholder=" " />
                    <label>First Name</label>
                </div>
                <div class="col-md-5 form-group">
                    <input type="text" name="LastName" value="@(Model?.LastName ?? string.Empty)" required placeholder=" " />
                    <label>Last Name</label>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 form-group">
                    <input type="email" id="Email" name="Email" value="@(Model?.Email ?? string.Empty)" required placeholder=" " />
                    <label>Email</label>
                    <small id="emailWarning" style="color:red;display:none;">Email already registered.</small>
                </div>
                <div class="col-md-4 form-group">
                    <input type="password" name="Password" value="********" readonly onclick="this.removeAttribute('readonly'); this.value='';" placeholder=" ">
                    <label>Password</label>
                    <small class="text-muted">Leave blank to keep current password.</small>
                    
                </div>
                <div class="col-md-4 form-group">
                    <input type="text" name="Phone" value="@(Model?.Phone ?? string.Empty)" placeholder=" " />
                    <label>Phone</label>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 form-group">
                    <input type="text" name="Address1" value="@(Model?.Address1 ?? string.Empty)" required placeholder=" " />
                    <label>Address 1</label>
                </div>
                <div class="col-md-6 form-group">
                    <input type="text" name="Address2" value="@(Model?.Address2 ?? string.Empty)" placeholder=" " />
                    <label>Address 2</label>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 form-group">
                    <input type="text" name="Town" value="@(Model?.Town ?? string.Empty)" placeholder=" " />
                    <label>Town</label>
                </div>
               
                <div class="col-md-4 form-group" id="CountryContainer">
                    <select id="Country" name="Country" class="form-select" required>
                        <option value="">--Select Country--</option>
                        @foreach (var country in ViewBag.Countries)
                        {
                            var isSelected = Model.CountryId == country.countryID;
                            if (isSelected)
                            {
                                <option value="@country.countryID" selected>@country.countryName</option>
                            }
                            else
                            {
                                <option value="@country.countryID">@country.countryName</option>
                            }
                        }

                    </select>
                    <label>Country</label>
                </div>
                <div class="col-md-4 form-group" id="StateContainer">

                    @if (Model.StateId != 0)
                    {
                        <select id="State" name="State" class="form-select" required>
                            <option value="">--Select State--</option>
                            @foreach (var state in ViewBag.states)
                            {
                                var isSelected = Model.StateId == state.stateID;
                                if (isSelected)
                                {
                                    <option value="@state.stateID" selected>@state.stateName</option>
                                }
                                else
                                {
                                    <option value="@state.stateID">@state.stateName</option>
                                }
                            }
                        </select>
                    }
                    else
                    {
                        <input type="text" name="State" id="State" placeholder="Enter State" value="@(Model?.State ?? string.Empty)" required />
                    }
                    <label>State</label>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 form-group">
                    <input type="text" name="Role" value="@(Model?.Role ?? string.Empty)" readonly placeholder=" " />
                    <label>Role</label>
                </div>
            </div>

            <button type="submit">Save Changes</button>
        }

    </div>
</div>

<script>
    $(document).ready(function () {

        // Load states
        $('#Country').change(function () {
            var countryId = $(this).val();
            var $stateContainer = $('#StateContainer');
            $stateContainer.empty();

            if (!countryId) return;

            $.get('/Account/GetStates?countryId=' + countryId, function (data) {
                if (data.length > 0) {
                    var $select = $('<select id="State" name="State" class="form-select" required><option value="">--Select State--</option></select>');
                    $.each(data, function (i, state) {
                        $select.append('<option value="' + state.stateID + '">' + state.stateName + '</option>');
                    });
                    $stateContainer.append($select);
                    $stateContainer.append('<label>State</label>');
                } else {
                    var $input = $('<input type="text" name="State" id="State" placeholder="Enter State" required/>');
                    $stateContainer.append($input);
                    $stateContainer.append('<label>State</label>');
                }
            });
        });


        // Email check
        // $('#Email').on('blur', function () {
        //     var email = $(this).val();
        //     if (email) {
        //         $.get('/Account/CheckEmail?email=' + encodeURIComponent(email), function (exists) {
        //             if (exists === true) {
        //                 $('#emailWarning').show();
        //                 $('#Email').focus();
        //             } else {
        //                 $('#emailWarning').hide();
        //             }
        //         });
        //     }
        // });
    });
</script>
